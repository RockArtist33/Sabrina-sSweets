@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model SabrinaSweets.Models.ViewModels.ViewModelSettings

@{
}


<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"] - Settings</title>
    <link rel="stylesheet" href="~/css/Settings.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
    <script>
        function showhide(id) {
            menu = document.getElementById(id);
            arrow = document.getElementById(id).childNodes.item(1);
            arrowList = document.getElementById(id+"List");
            console.log(arrowList);
            console.log(menu.childNodes);
            
            if (arrow.classList.contains("rotated")) {
                arrow.classList.remove("rotated");
                arrowList.classList.add("hidden");
                
                
            } else {
                arrow.classList.add("rotated");
                arrowList.classList.remove("hidden");
            }
        }

    </script>
</head>
<body>

    <div class="flexbox"> 
        <ul class="SettingsList">
            <li class="SettingsTitle">
                <span style=";text-align:center;font-size:24px;font-family: 'Roboto'">
                    Settings
                </span>
            </li>
            @foreach (var item in Model.EnumCategories) {
                <li class="SettingsItem">
                    @if (ViewBag.Active == item.Id)
                    {
                        <a href="?id=@Html.DisplayFor(modelItem => item.Id)" id=@Html.DisplayFor(modelItem => item.Id) onclick="showhide(this.id)" class="nav-link SettingsLink">
                            <img class="arrow rotated" src="~/img/svg/arrow.svg" />
                            <span>@Html.DisplayFor(modelItem => item.Name)</span>
                        </a>
                        <ul id="@Html.DisplayFor(modelItem => item.Id)List" class="SettingsitemList">
                            @foreach (var Settingsitem in Model.EnumSettings)
                            {
                                if (Model.EnumSetCat.Any(i => (i.Settings_Id == Settingsitem.CreatedSettingsId) && (i.CategoryId == item.Id)))
                                {
                                    <li class="SettingsitemlistItem">
                                        <a id="Settings-@Html.DisplayFor(modelItem => Settingsitem.CreatedSettingsId)" href="?id=@Html.DisplayFor(modelItem => item.Id)#Settings-@Html.DisplayFor(modelItem => Settingsitem.CreatedSettingsId)" class="SettingsitemlistitemText"><span>@Html.DisplayFor(l => Settingsitem.Name)</span></a>
                                    </li>

                                }
                            }
                        </ul>
                    }
                    else
                    {
                        <a href="?id=@Html.DisplayFor(modelItem => item.Id)" id=@Html.DisplayFor(modelItem => item.Id) onclick="showhide(this.id)" class="nav-link SettingsLink">
                            <img class="arrow" src="~/img/svg/arrow.svg" />
                            <span>@Html.DisplayFor(modelItem => item.Name)</span>
                        </a>
                        <ul id="@Html.DisplayFor(modelItem => item.Id)List" class="SettingsitemList hidden">
                            @foreach (var Settingsitem in Model.EnumSettings)
                            {
                                if (Model.EnumSetCat.Any(i => (i.Settings_Id == Settingsitem.CreatedSettingsId) && (i.CategoryId == item.Id)))
                                {
                                    <li class="SettingsitemlistItem">
                                        <a href="?id=@Html.DisplayFor(modelItem => item.Id)#@Html.DisplayFor(modelItem => Settingsitem.CreatedSettingsId)" class="SettingsitemlistitemText"><span>@Html.DisplayFor(l => Settingsitem.Name)</span></a>
                                    </li>

                                }
                            }
                        </ul>
                    }
                 </li>
            }
        </ul>
        <div style="position:absolute;left:400px">
            @RenderBody()
        </div>
        
    </div>
    
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>



